/*
 * generated by Xtext 2.33.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "DBModel";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDBModel
entryRuleDBModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDBModelRule()); }
	iv_ruleDBModel=ruleDBModel
	{ $current=$iv_ruleDBModel.current; }
	EOF;

// Rule DBModel
ruleDBModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDBModelAccess().getDBModelAction_0(),
					$current);
			}
		)
		otherlv_1='DBModel'
		{
			newLeafNode(otherlv_1, grammarAccess.getDBModelAccess().getDBModelKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDBModelAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='collections'
		{
			newLeafNode(otherlv_3, grammarAccess.getDBModelAccess().getCollectionsKeyword_3());
		}
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getDBModelAccess().getLeftSquareBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDBModelAccess().getCollectionsCollectionParserRuleCall_5_0());
				}
				lv_collections_5_0=ruleCollection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDBModelRule());
					}
					add(
						$current,
						"collections",
						lv_collections_5_0,
						"org.xtext.example.mydsl.MyDsl.Collection");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getDBModelAccess().getRightSquareBracketKeyword_6());
		}
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getDBModelAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleCollection
entryRuleCollection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionRule()); }
	iv_ruleCollection=ruleCollection
	{ $current=$iv_ruleCollection.current; }
	EOF;

// Rule Collection
ruleCollection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Collection'
		{
			newLeafNode(otherlv_0, grammarAccess.getCollectionAccess().getCollectionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCollectionAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCollectionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCollectionAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='fields'
		{
			newLeafNode(otherlv_3, grammarAccess.getCollectionAccess().getFieldsKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getCollectionAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCollectionAccess().getFieldsFieldParserRuleCall_5_0());
				}
				lv_fields_5_0=ruleField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollectionRule());
					}
					add(
						$current,
						"fields",
						lv_fields_5_0,
						"org.xtext.example.mydsl.MyDsl.Field");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getCollectionAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_7='indexes'
		{
			newLeafNode(otherlv_7, grammarAccess.getCollectionAccess().getIndexesKeyword_7());
		}
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getCollectionAccess().getLeftCurlyBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCollectionAccess().getIndexesIndexParserRuleCall_9_0());
				}
				lv_indexes_9_0=ruleIndex
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollectionRule());
					}
					add(
						$current,
						"indexes",
						lv_indexes_9_0,
						"org.xtext.example.mydsl.MyDsl.Index");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getCollectionAccess().getRightCurlyBracketKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCollectionAccess().getSeedDataSeedDataParserRuleCall_11_0());
				}
				lv_seedData_11_0=ruleSeedData
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollectionRule());
					}
					set(
						$current,
						"seedData",
						lv_seedData_11_0,
						"org.xtext.example.mydsl.MyDsl.SeedData");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getCollectionAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleField
entryRuleField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	iv_ruleField=ruleField
	{ $current=$iv_ruleField.current; }
	EOF;

// Rule Field
ruleField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Field'
		{
			newLeafNode(otherlv_0, grammarAccess.getFieldAccess().getFieldKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFieldAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getFieldAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldAccess().getTypeDataTypeParserRuleCall_3_0());
				}
				lv_type_3_0=ruleDataType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.xtext.example.mydsl.MyDsl.DataType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDataType
entryRuleDataType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	iv_ruleDataType=ruleDataType
	{ $current=$iv_ruleDataType.current; }
	EOF;

// Rule DataType
ruleDataType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getDataTypeAccess().getDataTypeAction_0_0(),
						$current);
				}
			)
			otherlv_1='String'
			{
				newLeafNode(otherlv_1, grammarAccess.getDataTypeAccess().getStringKeyword_0_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getDataTypeAccess().getDataTypeAction_1_0(),
						$current);
				}
			)
			otherlv_3='Number'
			{
				newLeafNode(otherlv_3, grammarAccess.getDataTypeAccess().getNumberKeyword_1_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getDataTypeAccess().getDataTypeAction_2_0(),
						$current);
				}
			)
			otherlv_5='Boolean'
			{
				newLeafNode(otherlv_5, grammarAccess.getDataTypeAccess().getBooleanKeyword_2_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getDataTypeAccess().getDataTypeAction_3_0(),
						$current);
				}
			)
			otherlv_7='Date'
			{
				newLeafNode(otherlv_7, grammarAccess.getDataTypeAccess().getDateKeyword_3_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getDataTypeAccess().getDataTypeAction_4_0(),
						$current);
				}
			)
			otherlv_9='Object'
			{
				newLeafNode(otherlv_9, grammarAccess.getDataTypeAccess().getObjectKeyword_4_1());
			}
		)
		    |
		(
			otherlv_10='Array'
			{
				newLeafNode(otherlv_10, grammarAccess.getDataTypeAccess().getArrayKeyword_5_0());
			}
			otherlv_11='<'
			{
				newLeafNode(otherlv_11, grammarAccess.getDataTypeAccess().getLessThanSignKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataTypeAccess().getDataTypeDataTypeParserRuleCall_5_2_0());
					}
					lv_dataType_12_0=ruleDataType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataTypeRule());
						}
						set(
							$current,
							"dataType",
							lv_dataType_12_0,
							"org.xtext.example.mydsl.MyDsl.DataType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_13='>'
			{
				newLeafNode(otherlv_13, grammarAccess.getDataTypeAccess().getGreaterThanSignKeyword_5_3());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getDataTypeAccess().getDataTypeAction_6_0(),
						$current);
				}
			)
			otherlv_15='ObjectId'
			{
				newLeafNode(otherlv_15, grammarAccess.getDataTypeAccess().getObjectIdKeyword_6_1());
			}
		)
	)
;

// Entry rule entryRuleIndex
entryRuleIndex returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndexRule()); }
	iv_ruleIndex=ruleIndex
	{ $current=$iv_ruleIndex.current; }
	EOF;

// Rule Index
ruleIndex returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Index'
		{
			newLeafNode(otherlv_0, grammarAccess.getIndexAccess().getIndexKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getIndexAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIndexRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getIndexAccess().getColonKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getIndexAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				lv_fields_4_0=RULE_STRING
				{
					newLeafNode(lv_fields_4_0, grammarAccess.getIndexAccess().getFieldsSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIndexRule());
					}
					addWithLastConsumed(
						$current,
						"fields",
						lv_fields_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)*
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getIndexAccess().getCommaKeyword_5());
		}
		(
			(
				lv_fields_6_0=RULE_STRING
				{
					newLeafNode(lv_fields_6_0, grammarAccess.getIndexAccess().getFieldsSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIndexRule());
					}
					addWithLastConsumed(
						$current,
						"fields",
						lv_fields_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getIndexAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleSeedData
entryRuleSeedData returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSeedDataRule()); }
	iv_ruleSeedData=ruleSeedData
	{ $current=$iv_ruleSeedData.current; }
	EOF;

// Rule SeedData
ruleSeedData returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='seedData'
		{
			newLeafNode(otherlv_0, grammarAccess.getSeedDataAccess().getSeedDataKeyword_0());
		}
		(
			(
				lv_collectionName_1_0=RULE_STRING
				{
					newLeafNode(lv_collectionName_1_0, grammarAccess.getSeedDataAccess().getCollectionNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSeedDataRule());
					}
					setWithLastConsumed(
						$current,
						"collectionName",
						lv_collectionName_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSeedDataAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSeedDataAccess().getDataArraysDataArrayParserRuleCall_3_0());
				}
				lv_dataArrays_3_0=ruleDataArray
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSeedDataRule());
					}
					add(
						$current,
						"dataArrays",
						lv_dataArrays_3_0,
						"org.xtext.example.mydsl.MyDsl.DataArray");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSeedDataAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleDataArray
entryRuleDataArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataArrayRule()); }
	iv_ruleDataArray=ruleDataArray
	{ $current=$iv_ruleDataArray.current; }
	EOF;

// Rule DataArray
ruleDataArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getDataArrayAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataArrayRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDataArrayAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataArrayAccess().getDataPairsDataPairParserRuleCall_2_0());
				}
				lv_dataPairs_2_0=ruleDataPair
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataArrayRule());
					}
					add(
						$current,
						"dataPairs",
						lv_dataPairs_2_0,
						"org.xtext.example.mydsl.MyDsl.DataPair");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getDataArrayAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleDataPair
entryRuleDataPair returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataPairRule()); }
	iv_ruleDataPair=ruleDataPair
	{ $current=$iv_ruleDataPair.current; }
	EOF;

// Rule DataPair
ruleDataPair returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_fieldName_0_0=RULE_STRING
				{
					newLeafNode(lv_fieldName_0_0, grammarAccess.getDataPairAccess().getFieldNameSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataPairRule());
					}
					setWithLastConsumed(
						$current,
						"fieldName",
						lv_fieldName_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getDataPairAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDataPairAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataPairAccess().getValueDataValueParserRuleCall_3_0());
				}
				lv_value_3_0=ruleDataValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataPairRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"org.xtext.example.mydsl.MyDsl.DataValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getDataPairAccess().getCommaKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataPairAccess().getDataTypeDataTypeParserRuleCall_5_0());
				}
				lv_dataType_5_0=ruleDataType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataPairRule());
					}
					set(
						$current,
						"dataType",
						lv_dataType_5_0,
						"org.xtext.example.mydsl.MyDsl.DataType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getDataPairAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleDataValue
entryRuleDataValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataValueRule()); }
	iv_ruleDataValue=ruleDataValue
	{ $current=$iv_ruleDataValue.current; }
	EOF;

// Rule DataValue
ruleDataValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_stringValue_0_0=RULE_STRING
				{
					newLeafNode(lv_stringValue_0_0, grammarAccess.getDataValueAccess().getStringValueSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataValueRule());
					}
					setWithLastConsumed(
						$current,
						"stringValue",
						lv_stringValue_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		    |
		(
			(
				lv_intValue_1_0=RULE_INT
				{
					newLeafNode(lv_intValue_1_0, grammarAccess.getDataValueAccess().getIntValueINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataValueRule());
					}
					setWithLastConsumed(
						$current,
						"intValue",
						lv_intValue_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		    |
		(
			(
				lv_doubleValue_2_0=RULE_DOUBLE
				{
					newLeafNode(lv_doubleValue_2_0, grammarAccess.getDataValueAccess().getDoubleValueDOUBLETerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataValueRule());
					}
					setWithLastConsumed(
						$current,
						"doubleValue",
						lv_doubleValue_2_0,
						"org.xtext.example.mydsl.MyDsl.DOUBLE");
				}
			)
		)
		    |
		(
			(
				lv_booleanValue_3_0=RULE_BOOLEAN
				{
					newLeafNode(lv_booleanValue_3_0, grammarAccess.getDataValueAccess().getBooleanValueBOOLEANTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataValueRule());
					}
					setWithLastConsumed(
						$current,
						"booleanValue",
						lv_booleanValue_3_0,
						"org.xtext.example.mydsl.MyDsl.BOOLEAN");
				}
			)
		)
	)
;

RULE_BOOLEAN : ('true'|'false');

RULE_DOUBLE : (('0'..'9')+ '.' ('0'..'9')*|'.' ('0'..'9')+);

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
