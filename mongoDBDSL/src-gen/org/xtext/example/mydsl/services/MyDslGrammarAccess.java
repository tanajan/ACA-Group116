/*
 * generated by Xtext 2.33.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class DBModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.DBModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDBModelAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDBModelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cCollectionsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cCollectionsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCollectionsCollectionParserRuleCall_5_0 = (RuleCall)cCollectionsAssignment_5.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//DBModel:
		//    {DBModel}
		//    'DBModel' '{'
		//        'collections' '[' collections+=Collection* ']'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{DBModel}
		//'DBModel' '{'
		//    'collections' '[' collections+=Collection* ']'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{DBModel}
		public Action getDBModelAction_0() { return cDBModelAction_0; }
		
		//'DBModel'
		public Keyword getDBModelKeyword_1() { return cDBModelKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'collections'
		public Keyword getCollectionsKeyword_3() { return cCollectionsKeyword_3; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_4() { return cLeftSquareBracketKeyword_4; }
		
		//collections+=Collection*
		public Assignment getCollectionsAssignment_5() { return cCollectionsAssignment_5; }
		
		//Collection
		public RuleCall getCollectionsCollectionParserRuleCall_5_0() { return cCollectionsCollectionParserRuleCall_5_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_6() { return cRightSquareBracketKeyword_6; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class CollectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Collection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCollectionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cFieldsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFieldsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFieldsFieldParserRuleCall_5_0 = (RuleCall)cFieldsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cIndexesKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cIndexesAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cIndexesIndexParserRuleCall_9_0 = (RuleCall)cIndexesAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cSeedDataAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cSeedDataSeedDataParserRuleCall_11_0 = (RuleCall)cSeedDataAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Collection:
		//    'Collection' name=STRING '{'
		//        'fields' '{' fields+=Field* '}'
		//        'indexes' '{' indexes+=Index* '}'
		//        seedData=SeedData?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Collection' name=STRING '{'
		//    'fields' '{' fields+=Field* '}'
		//    'indexes' '{' indexes+=Index* '}'
		//    seedData=SeedData?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Collection'
		public Keyword getCollectionKeyword_0() { return cCollectionKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'fields'
		public Keyword getFieldsKeyword_3() { return cFieldsKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//fields+=Field*
		public Assignment getFieldsAssignment_5() { return cFieldsAssignment_5; }
		
		//Field
		public RuleCall getFieldsFieldParserRuleCall_5_0() { return cFieldsFieldParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
		
		//'indexes'
		public Keyword getIndexesKeyword_7() { return cIndexesKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//indexes+=Index*
		public Assignment getIndexesAssignment_9() { return cIndexesAssignment_9; }
		
		//Index
		public RuleCall getIndexesIndexParserRuleCall_9_0() { return cIndexesIndexParserRuleCall_9_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
		
		//seedData=SeedData?
		public Assignment getSeedDataAssignment_11() { return cSeedDataAssignment_11; }
		
		//SeedData
		public RuleCall getSeedDataSeedDataParserRuleCall_11_0() { return cSeedDataSeedDataParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class FieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Field");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFieldKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeDataTypeParserRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//Field:
		//    'Field' name=STRING ':' type=DataType;
		@Override public ParserRule getRule() { return rule; }
		
		//'Field' name=STRING ':' type=DataType
		public Group getGroup() { return cGroup; }
		
		//'Field'
		public Keyword getFieldKeyword_0() { return cFieldKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//type=DataType
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//DataType
		public RuleCall getTypeDataTypeParserRuleCall_3_0() { return cTypeDataTypeParserRuleCall_3_0; }
	}
	public class DataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.DataType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cDataTypeAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Keyword cStringKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cDataTypeAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cNumberKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Action cDataTypeAction_2_0 = (Action)cGroup_2.eContents().get(0);
		private final Keyword cBooleanKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Action cDataTypeAction_3_0 = (Action)cGroup_3.eContents().get(0);
		private final Keyword cDateKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Action cDataTypeAction_4_0 = (Action)cGroup_4.eContents().get(0);
		private final Keyword cObjectKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Keyword cArrayKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLessThanSignKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cDataTypeAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cDataTypeDataTypeParserRuleCall_5_2_0 = (RuleCall)cDataTypeAssignment_5_2.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Action cDataTypeAction_6_0 = (Action)cGroup_6.eContents().get(0);
		private final Keyword cObjectIdKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		
		//DataType:
		//    {DataType} 'String' | {DataType} 'Number' | {DataType} 'Boolean' | {DataType} 'Date' | {DataType} 'Object' | 'Array' '<' dataType=DataType '>' | {DataType} 'ObjectId';
		@Override public ParserRule getRule() { return rule; }
		
		//{DataType} 'String' | {DataType} 'Number' | {DataType} 'Boolean' | {DataType} 'Date' | {DataType} 'Object' | 'Array' '<' dataType=DataType '>' | {DataType} 'ObjectId'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{DataType} 'String'
		public Group getGroup_0() { return cGroup_0; }
		
		//{DataType}
		public Action getDataTypeAction_0_0() { return cDataTypeAction_0_0; }
		
		//'String'
		public Keyword getStringKeyword_0_1() { return cStringKeyword_0_1; }
		
		//{DataType} 'Number'
		public Group getGroup_1() { return cGroup_1; }
		
		//{DataType}
		public Action getDataTypeAction_1_0() { return cDataTypeAction_1_0; }
		
		//'Number'
		public Keyword getNumberKeyword_1_1() { return cNumberKeyword_1_1; }
		
		//{DataType} 'Boolean'
		public Group getGroup_2() { return cGroup_2; }
		
		//{DataType}
		public Action getDataTypeAction_2_0() { return cDataTypeAction_2_0; }
		
		//'Boolean'
		public Keyword getBooleanKeyword_2_1() { return cBooleanKeyword_2_1; }
		
		//{DataType} 'Date'
		public Group getGroup_3() { return cGroup_3; }
		
		//{DataType}
		public Action getDataTypeAction_3_0() { return cDataTypeAction_3_0; }
		
		//'Date'
		public Keyword getDateKeyword_3_1() { return cDateKeyword_3_1; }
		
		//{DataType} 'Object'
		public Group getGroup_4() { return cGroup_4; }
		
		//{DataType}
		public Action getDataTypeAction_4_0() { return cDataTypeAction_4_0; }
		
		//'Object'
		public Keyword getObjectKeyword_4_1() { return cObjectKeyword_4_1; }
		
		//'Array' '<' dataType=DataType '>'
		public Group getGroup_5() { return cGroup_5; }
		
		//'Array'
		public Keyword getArrayKeyword_5_0() { return cArrayKeyword_5_0; }
		
		//'<'
		public Keyword getLessThanSignKeyword_5_1() { return cLessThanSignKeyword_5_1; }
		
		//dataType=DataType
		public Assignment getDataTypeAssignment_5_2() { return cDataTypeAssignment_5_2; }
		
		//DataType
		public RuleCall getDataTypeDataTypeParserRuleCall_5_2_0() { return cDataTypeDataTypeParserRuleCall_5_2_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_5_3() { return cGreaterThanSignKeyword_5_3; }
		
		//{DataType} 'ObjectId'
		public Group getGroup_6() { return cGroup_6; }
		
		//{DataType}
		public Action getDataTypeAction_6_0() { return cDataTypeAction_6_0; }
		
		//'ObjectId'
		public Keyword getObjectIdKeyword_6_1() { return cObjectIdKeyword_6_1; }
	}
	public class IndexElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Index");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIndexKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFieldsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFieldsSTRINGTerminalRuleCall_4_0 = (RuleCall)cFieldsAssignment_4.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cFieldsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cFieldsSTRINGTerminalRuleCall_6_0 = (RuleCall)cFieldsAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Index:
		//    'Index' name=STRING ':' '{' fields+=STRING* ',' fields+=STRING* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Index' name=STRING ':' '{' fields+=STRING* ',' fields+=STRING* '}'
		public Group getGroup() { return cGroup; }
		
		//'Index'
		public Keyword getIndexKeyword_0() { return cIndexKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//fields+=STRING*
		public Assignment getFieldsAssignment_4() { return cFieldsAssignment_4; }
		
		//STRING
		public RuleCall getFieldsSTRINGTerminalRuleCall_4_0() { return cFieldsSTRINGTerminalRuleCall_4_0; }
		
		//','
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }
		
		//fields+=STRING*
		public Assignment getFieldsAssignment_6() { return cFieldsAssignment_6; }
		
		//STRING
		public RuleCall getFieldsSTRINGTerminalRuleCall_6_0() { return cFieldsSTRINGTerminalRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class SeedDataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.SeedData");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSeedDataKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cCollectionNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCollectionNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cCollectionNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDataArraysAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDataArraysDataArrayParserRuleCall_3_0 = (RuleCall)cDataArraysAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//SeedData:
		//    'seedData' collectionName=STRING '{' dataArrays+=DataArray* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'seedData' collectionName=STRING '{' dataArrays+=DataArray* '}'
		public Group getGroup() { return cGroup; }
		
		//'seedData'
		public Keyword getSeedDataKeyword_0() { return cSeedDataKeyword_0; }
		
		//collectionName=STRING
		public Assignment getCollectionNameAssignment_1() { return cCollectionNameAssignment_1; }
		
		//STRING
		public RuleCall getCollectionNameSTRINGTerminalRuleCall_1_0() { return cCollectionNameSTRINGTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//dataArrays+=DataArray*
		public Assignment getDataArraysAssignment_3() { return cDataArraysAssignment_3; }
		
		//DataArray
		public RuleCall getDataArraysDataArrayParserRuleCall_3_0() { return cDataArraysDataArrayParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class DataArrayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.DataArray");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDataPairsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDataPairsDataPairParserRuleCall_2_0 = (RuleCall)cDataPairsAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//DataArray:
		//    name=ID '{' dataPairs+=DataPair* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID '{' dataPairs+=DataPair* '}'
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//dataPairs+=DataPair*
		public Assignment getDataPairsAssignment_2() { return cDataPairsAssignment_2; }
		
		//DataPair
		public RuleCall getDataPairsDataPairParserRuleCall_2_0() { return cDataPairsDataPairParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class DataPairElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.DataPair");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cFieldNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_0_0 = (RuleCall)cFieldNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueDataValueParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDataTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDataTypeDataTypeParserRuleCall_5_0 = (RuleCall)cDataTypeAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//DataPair:
		//    fieldName=STRING ':' '{' value=DataValue ',' dataType=DataType '}';
		@Override public ParserRule getRule() { return rule; }
		
		//fieldName=STRING ':' '{' value=DataValue ',' dataType=DataType '}'
		public Group getGroup() { return cGroup; }
		
		//fieldName=STRING
		public Assignment getFieldNameAssignment_0() { return cFieldNameAssignment_0; }
		
		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_0_0() { return cFieldNameSTRINGTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//value=DataValue
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//DataValue
		public RuleCall getValueDataValueParserRuleCall_3_0() { return cValueDataValueParserRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//dataType=DataType
		public Assignment getDataTypeAssignment_5() { return cDataTypeAssignment_5; }
		
		//DataType
		public RuleCall getDataTypeDataTypeParserRuleCall_5_0() { return cDataTypeDataTypeParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class DataValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.DataValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cStringValueAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cStringValueSTRINGTerminalRuleCall_0_0 = (RuleCall)cStringValueAssignment_0.eContents().get(0);
		private final Assignment cIntValueAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cIntValueINTTerminalRuleCall_1_0 = (RuleCall)cIntValueAssignment_1.eContents().get(0);
		private final Assignment cDoubleValueAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cDoubleValueDOUBLETerminalRuleCall_2_0 = (RuleCall)cDoubleValueAssignment_2.eContents().get(0);
		private final Assignment cBooleanValueAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cBooleanValueBOOLEANTerminalRuleCall_3_0 = (RuleCall)cBooleanValueAssignment_3.eContents().get(0);
		
		//DataValue:
		//    stringValue=STRING
		//  | intValue=INT
		//  | doubleValue=DOUBLE
		//  | booleanValue=BOOLEAN;
		@Override public ParserRule getRule() { return rule; }
		
		//  stringValue=STRING
		//| intValue=INT
		//| doubleValue=DOUBLE
		//| booleanValue=BOOLEAN
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//stringValue=STRING
		public Assignment getStringValueAssignment_0() { return cStringValueAssignment_0; }
		
		//STRING
		public RuleCall getStringValueSTRINGTerminalRuleCall_0_0() { return cStringValueSTRINGTerminalRuleCall_0_0; }
		
		//intValue=INT
		public Assignment getIntValueAssignment_1() { return cIntValueAssignment_1; }
		
		//INT
		public RuleCall getIntValueINTTerminalRuleCall_1_0() { return cIntValueINTTerminalRuleCall_1_0; }
		
		//doubleValue=DOUBLE
		public Assignment getDoubleValueAssignment_2() { return cDoubleValueAssignment_2; }
		
		//DOUBLE
		public RuleCall getDoubleValueDOUBLETerminalRuleCall_2_0() { return cDoubleValueDOUBLETerminalRuleCall_2_0; }
		
		//booleanValue=BOOLEAN
		public Assignment getBooleanValueAssignment_3() { return cBooleanValueAssignment_3; }
		
		//BOOLEAN
		public RuleCall getBooleanValueBOOLEANTerminalRuleCall_3_0() { return cBooleanValueBOOLEANTerminalRuleCall_3_0; }
	}
	
	
	private final DBModelElements pDBModel;
	private final CollectionElements pCollection;
	private final FieldElements pField;
	private final DataTypeElements pDataType;
	private final IndexElements pIndex;
	private final SeedDataElements pSeedData;
	private final DataArrayElements pDataArray;
	private final DataPairElements pDataPair;
	private final TerminalRule tBOOLEAN;
	private final TerminalRule tDOUBLE;
	private final DataValueElements pDataValue;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pDBModel = new DBModelElements();
		this.pCollection = new CollectionElements();
		this.pField = new FieldElements();
		this.pDataType = new DataTypeElements();
		this.pIndex = new IndexElements();
		this.pSeedData = new SeedDataElements();
		this.pDataArray = new DataArrayElements();
		this.pDataPair = new DataPairElements();
		this.tBOOLEAN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.BOOLEAN");
		this.tDOUBLE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.DOUBLE");
		this.pDataValue = new DataValueElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//DBModel:
	//    {DBModel}
	//    'DBModel' '{'
	//        'collections' '[' collections+=Collection* ']'
	//    '}';
	public DBModelElements getDBModelAccess() {
		return pDBModel;
	}
	
	public ParserRule getDBModelRule() {
		return getDBModelAccess().getRule();
	}
	
	//Collection:
	//    'Collection' name=STRING '{'
	//        'fields' '{' fields+=Field* '}'
	//        'indexes' '{' indexes+=Index* '}'
	//        seedData=SeedData?
	//    '}';
	public CollectionElements getCollectionAccess() {
		return pCollection;
	}
	
	public ParserRule getCollectionRule() {
		return getCollectionAccess().getRule();
	}
	
	//Field:
	//    'Field' name=STRING ':' type=DataType;
	public FieldElements getFieldAccess() {
		return pField;
	}
	
	public ParserRule getFieldRule() {
		return getFieldAccess().getRule();
	}
	
	//DataType:
	//    {DataType} 'String' | {DataType} 'Number' | {DataType} 'Boolean' | {DataType} 'Date' | {DataType} 'Object' | 'Array' '<' dataType=DataType '>' | {DataType} 'ObjectId';
	public DataTypeElements getDataTypeAccess() {
		return pDataType;
	}
	
	public ParserRule getDataTypeRule() {
		return getDataTypeAccess().getRule();
	}
	
	//Index:
	//    'Index' name=STRING ':' '{' fields+=STRING* ',' fields+=STRING* '}';
	public IndexElements getIndexAccess() {
		return pIndex;
	}
	
	public ParserRule getIndexRule() {
		return getIndexAccess().getRule();
	}
	
	//SeedData:
	//    'seedData' collectionName=STRING '{' dataArrays+=DataArray* '}';
	public SeedDataElements getSeedDataAccess() {
		return pSeedData;
	}
	
	public ParserRule getSeedDataRule() {
		return getSeedDataAccess().getRule();
	}
	
	//DataArray:
	//    name=ID '{' dataPairs+=DataPair* '}';
	public DataArrayElements getDataArrayAccess() {
		return pDataArray;
	}
	
	public ParserRule getDataArrayRule() {
		return getDataArrayAccess().getRule();
	}
	
	//DataPair:
	//    fieldName=STRING ':' '{' value=DataValue ',' dataType=DataType '}';
	public DataPairElements getDataPairAccess() {
		return pDataPair;
	}
	
	public ParserRule getDataPairRule() {
		return getDataPairAccess().getRule();
	}
	
	//terminal BOOLEAN: 'true' | 'false';
	public TerminalRule getBOOLEANRule() {
		return tBOOLEAN;
	}
	
	//terminal DOUBLE: ('0'..'9')+ '.' ('0'..'9')* | '.' ('0'..'9')+;
	public TerminalRule getDOUBLERule() {
		return tDOUBLE;
	}
	
	//DataValue:
	//    stringValue=STRING
	//  | intValue=INT
	//  | doubleValue=DOUBLE
	//  | booleanValue=BOOLEAN;
	public DataValueElements getDataValueAccess() {
		return pDataValue;
	}
	
	public ParserRule getDataValueRule() {
		return getDataValueAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
