/**
 * generated by Xtext 2.33.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.myDsl.DataArray;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.SeedData;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Seed Data</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.SeedDataImpl#getCollectionName <em>Collection Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.SeedDataImpl#getDataArrays <em>Data Arrays</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SeedDataImpl extends MinimalEObjectImpl.Container implements SeedData
{
  /**
   * The default value of the '{@link #getCollectionName() <em>Collection Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCollectionName()
   * @generated
   * @ordered
   */
  protected static final String COLLECTION_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCollectionName() <em>Collection Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCollectionName()
   * @generated
   * @ordered
   */
  protected String collectionName = COLLECTION_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getDataArrays() <em>Data Arrays</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDataArrays()
   * @generated
   * @ordered
   */
  protected EList<DataArray> dataArrays;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SeedDataImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.SEED_DATA;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCollectionName()
  {
    return collectionName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCollectionName(String newCollectionName)
  {
    String oldCollectionName = collectionName;
    collectionName = newCollectionName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SEED_DATA__COLLECTION_NAME, oldCollectionName, collectionName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<DataArray> getDataArrays()
  {
    if (dataArrays == null)
    {
      dataArrays = new EObjectContainmentEList<DataArray>(DataArray.class, this, MyDslPackage.SEED_DATA__DATA_ARRAYS);
    }
    return dataArrays;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.SEED_DATA__DATA_ARRAYS:
        return ((InternalEList<?>)getDataArrays()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.SEED_DATA__COLLECTION_NAME:
        return getCollectionName();
      case MyDslPackage.SEED_DATA__DATA_ARRAYS:
        return getDataArrays();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.SEED_DATA__COLLECTION_NAME:
        setCollectionName((String)newValue);
        return;
      case MyDslPackage.SEED_DATA__DATA_ARRAYS:
        getDataArrays().clear();
        getDataArrays().addAll((Collection<? extends DataArray>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.SEED_DATA__COLLECTION_NAME:
        setCollectionName(COLLECTION_NAME_EDEFAULT);
        return;
      case MyDslPackage.SEED_DATA__DATA_ARRAYS:
        getDataArrays().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.SEED_DATA__COLLECTION_NAME:
        return COLLECTION_NAME_EDEFAULT == null ? collectionName != null : !COLLECTION_NAME_EDEFAULT.equals(collectionName);
      case MyDslPackage.SEED_DATA__DATA_ARRAYS:
        return dataArrays != null && !dataArrays.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (collectionName: ");
    result.append(collectionName);
    result.append(')');
    return result.toString();
  }

} //SeedDataImpl
